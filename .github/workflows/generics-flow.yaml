#name: generics-flow
#on:
#  push:
#    branches:
#      - main
#  workflow_dispatch: {}
#
#env:
#  ACR_RESOURCE_GROUP: Generics-group
#  AZURE_CONTAINER_REGISTRY: genericsrepository
#  CLUSTER_NAME: generics-cluster
#  CLUSTER_RESOURCE_GROUP: Generics-group
#  CONTAINER_NAME: generics
#  DEPLOYMENT_MANIFEST_PATH: |
#    manifests/deployment.yaml
#    manifests/service.yaml
#
#jobs:
#  buildImage:
#    permissions:
#      contents: read
#      id-token: write
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out the repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#
#      - name: Build and test with Maven
#        run: mvn --batch-mode package
#
#      - name: Log in to Docker Hub
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u aleramiirez --password-stdin
#
#      - name: Build and push Docker images for api-gateway
#        run: |
#          cd api-gateway
#          docker build -t aleramiirez/generics:api-gateway .
#          docker push aleramiirez/generics:api-gateway
#
#      - name: Build and push Docker images for crud-service
#        run: |
#          cd CRUD-service
#          docker build -t aleramiirez/generics:crud-service .
#          docker push aleramiirez/generics:crud-service
#
#      - name: Build and push Docker images for register-service
#        run: |
#          cd register-service
#          docker build -t aleramiirez/generics:register-service .
#          docker push aleramiirez/generics:register-service
#
#  deploy:
#    permissions:
#      actions: read
#      contents: read
#      id-token: write
#    runs-on: ubuntu-latest
#    needs:
#      - buildImage
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#      - name: Build and test with Maven
#        run: mvn --batch-mode package
#      - uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
#        name: Azure login
#        with:
#          client-id: ${{ secrets.AZURE_CLIENT_ID }}
#          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#      - uses: azure/use-kubelogin@v1
#        name: Set up kubelogin for non-interactive login
#        with:
#          kubelogin-version: v0.0.25
#      - uses: azure/aks-set-context@v3
#        name: Get K8s context
#        with:
#          admin: "false"
#          cluster-name: ${{ env.CLUSTER_NAME }}
#          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
#          use-kubelogin: "true"
#      - name: Login Azure Repo
#        run: echo "sNVjOmpVKPPmEbqERoC7sNDfBaiBF9DqQBUZC3tHol+ACRDFOcuS" | docker login genericsrepository.azurecr.io -u genericsrepository --password-stdin
#      - uses: Azure/k8s-deploy@v4
#        name: Deploys application
#        with:
#          action: deploy
#          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
#          namespace: generics-namespace


