version: '4'

services:

# RabbitMQ

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.10.5-management
    hostname: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbit-data:/var/lib/rabbitmq


# api-gateway:
#   container_name: api-gateway
#   image: anavarrooo/generics:api-gateway
#   ports:
#     - 8084:8084##

# discovery-server:
#   container_name: discovery-server
#   image: anavarrooo/generics:discovery-server
#   restart: always
#   ports:
#     - 8761:8761
#   environment:
#     - eureka.instance.hostname=discoveryserver
#     - eureka.client.serviceUrl.defaultZone=http://discoveryserver:8761/eureka


  generics-db:
    container_name: generics-db
    image: mysql:5
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=generics
      - PMA_HOST=mysql
    volumes:
      - ./files/mysql:/docker-entrypoint-initdb.d
    ports:
      - 3307:3306

#  generics-audit-db:
#    container_name: generics-audit-db
#    image: mysql:5
#    restart: always
#    environment:
#      - MYSQL_ROOT_PASSWORD=root
#      - MYSQL_DATABASE=generics_audit
#      - PMA_HOST=mysql
#    volumes:
#      - mysql-data-audit:/var/lib/mysql
#    ports:
#      - 3308:3306
#    networks:
#      - generics

  register-service:
    container_name: register-service
    image: anavarrooo/generics:register-service
    ports:
      - 8086:8086
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:mysql://generics-db:3306/generics?autoReconnect=true&useSSL=false
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
    depends_on:
      - generics-db

#
#  crud-service:
#    container_name: crud-service
#    image: aleramiirez/generics:crud-service
#    ports:
#      - 8082:8082
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - DATABASE_URL=jdbc:mysql://generics-db:3306/generics?autoReconnect=true&useSSL=false
#      - DATABASE_USERNAME=root
#      - DATABASE_PASSWORD=root
#    depends_on:
#      - generics-db
#    networks:
#      - generics
#
#  audit-service:
#    container_name: audit-service
#    image: aleramiirez/generics:audit-service
#    ports:
#      - 8085:8085
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - DATABASE_URL=jdbc:mysql://generics-audit-db:3306/generics_audit?autoReconnect=true&useSSL=false
#      - DATABASE_USERNAME=root
#      - DATABASE_PASSWORD=root
#    depends_on:
#      - generics-audit-db
#    networks:
#      - generics
#
#  generics-front:
#    container_name: generics-front
#    image: aleramiirez/generics:generics-front
#    ports:
#      - 3000:3000
#    environment:
#      - DATABASE_URL=jdbc:mysql://generics-db:3306/generics?autoReconnect=true&useSSL=false
#      - DATABASE_USERNAME=root
#      - DATABASE_PASSWORD=root
#    depends_on:
#      - register-service
#      - crud-service
#    networks:
#      - generics

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.14.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    command: [ "/etc/ksqldb-server/run.sh" ]
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    volumes:
      - ./files/ksqldb-server:/etc/ksqldb-server

  # docker-compose exec ksqldb-cli  ksql http://ksqldb-server:8088
  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.14.0
    container_name: ksqldb-cli
    depends_on:
      - kafka
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    volumes:
      - ./files/ksqldb-cli:/etc/sql

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    depends_on:
      - zookeeper
      - kafka
    ports:
      - '8081:8081'
      - '31002:31002'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_JMX_HOSTNAME: "localhost"
      SCHEMA_REGISTRY_JMX_PORT: 31002

#  mysql:
#    image: mysql:8.0.32
#    container_name: mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#    ports:
#      - "3309:3306"
#    volumes:
#      - ./files/mysql:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

networks:
  generics:
    driver: bridge

volumes:
  mysql-data:
    external: true

  mysql-data-audit:
    external: true

  rabbit-data:
    external: true